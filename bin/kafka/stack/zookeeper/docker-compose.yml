version: '3.9'

services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:6.1.9
    hostname: zookeeper-1
    container_name: zookeeper-1
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 12181:2181
    networks:
      - hands-on-network
    volumes:
      - ../../volume/zookeeper/zookeeper-1/data:/var/lib/zookeeper/data
      - ../../volume/zookeeper/zookeeper-1/log:/var/lib/zookeeper/log

  zookeeper-2:
    image: confluentinc/cp-zookeeper:6.1.9
    hostname: zookeeper-2
    container_name: zookeeper-2
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - hands-on-network
    volumes:
      - ../../volume/zookeeper/zookeeper-2/data:/var/lib/zookeeper/data
      - ../../volume/zookeeper/zookeeper-2/log:/var/lib/zookeeper/log

  zookeeper-ui:
    image: elkozmon/zoonavigator:1.1.2
    hostname: zookeeper-ui
    container_name: zookeeper-ui
    environment:
      CONNECTION_LOCALZK_CONN: zookeeper-1:2181
      HTTP_PORT: 8083
    ports:
      - 8083:8083
    networks:
      - hands-on-network

  kafka-broker-1:
    image: confluentinc/cp-kafka:6.1.9
    hostname: kafka-broker-1
    container_name: kafka-broker-1
    ports:
      - 19092:19092
    networks:
      - hands-on-network
    volumes:
      - ../../volume/broker:/my-data
      - ../../volume/broker/broker-1/logs:/kafka/kafka-logs
    depends_on:
      - zookeeper-1
      - zookeeper-2
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: "r1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_SCHEMA_REGISTRY_URL: "schema-registry:8081"

  kafka-broker-2:
    image: confluentinc/cp-kafka:6.1.9
    hostname: kafka-broker-2
    container_name: kafka-broker-2
    ports:
      - 29092:29092
    networks:
      - hands-on-network
    volumes:
      - ../../volume/broker:/my-data
      - ../../volume/broker/broker-2/logs:/kafka/kafka-logs
    depends_on:
      - zookeeper-1
      - zookeeper-2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_BROKER_RACK: "r2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_SCHEMA_REGISTRY_URL: "schema-registry:8081"

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:6.1.9
    hostname: schema-registry
    container_name: schema-registry
    networks:
      - hands-on-network
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - zookeeper-1
      - zookeeper-2
    ports:
      - '8081:8081'
    volumes:
      - ../../volume/schema-registry/sample-schema:/schema-registry/sample-schema
    environment:
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-1:19092,PLAINTEXT://kafka-broker-2:29092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry

  rest-proxy:
    image: confluentinc/cp-kafka-rest:6.1.9
    hostname: rest-proxy
    container_name: rest-proxy
    networks:
      - hands-on-network
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - zookeeper-1
      - zookeeper-2
    ports:
      - '8082:8082'
    volumes:
      - ../../volume/schema-registry/sample-schema:/schema-registry/sample-schema
    environment:
      KAFKA_REST_HOST_NAME: 'rest-proxy'
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-1:19092,PLAINTEXT://kafka-broker-2:29092
      KAFKA_REST_LISTENERS: "http://rest-proxy:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      KAFKA_REST_ZOOKEEPER_CONNECT: 'zookeeper-1:2181,zookeeper-2:2181'


  ksql-server:
    image: confluentinc/cp-ksql-server:5.4.10
    hostname: ksql-server
    container_name: ksql-server
    ports:
      - 8088:8088
    volumes:
      - ../../volume/ksql:/demo
      - ../../volume/ksql-server/extensions:/etc/ksql-server/ext
    networks:
      - hands-on-network
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - zookeeper-1
      - zookeeper-2
      - kafka-schema-registry
      - kafka-connect-1
      - kafka-connect-2
    environment:
      KSQL_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-1:19092,PLAINTEXT://kafka-broker-2:29092
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_KSQL_SERVICE_ID: kafka_workshop
      KSQL_CUB_KAFKA_TIMEOUT: 300
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_OPTS: "-Dksql.connect.url=http://kafka-connect-1:8083 -Dksql.extension.dir=/etc/ksql-server/ext"
      KSQL_KSQL_COMMIT_INTERVAL_MS: 2000
      KSQL_KSQL_CACHE_MAX_BYTES_BUFFERING: 10000000
      KSQL_KSQL_STREAMS_AUTO_OFFSET_RESET: earliest

  kafka-connect-1:
    image: sebge2/kafka-connect:1.0.0
    hostname: kafka-connect-1
    container_name: kafka-connect-1
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - zookeeper-1
      - zookeeper-2
      - kafka-schema-registry
    ports:
      - '18083:8083'
    volumes:
      - ../../volume/connectors-config:/demo
      - ../../volume/connectors:/usr/share/my-connectors
    networks:
      - hands-on-network
    environment:
      CONNECT_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-1:19092,PLAINTEXT://kafka-broker-2:29092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: kafka-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: kafka-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: kafka-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "true"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect-1"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components,/usr/share/filestream-connectors,/usr/share/my-connectors"
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"

  kafka-connect-2:
    image: sebge2/kafka-connect:1.0.0
    hostname: kafka-connect-2
    container_name: kafka-connect-2
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - zookeeper-1
      - zookeeper-2
      - kafka-schema-registry
    ports:
      - '28083:8083'
    volumes:
      - ../../volume/connectors-config:/demo
      - ../../volume/connectors:/usr/share/my-connectors
    networks:
      - hands-on-network
    environment:
      CONNECT_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-1:19092,PLAINTEXT://kafka-broker-2:29092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: kafka-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: kafka-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: kafka-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "true"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect-2"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components,/usr/share/filestream-connectors,/usr/share/my-connectors"
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"

  kafka-ui:
    image: provectuslabs/kafka-ui:9fad0d0ee3c1d3e77eb37b4e510a8c0a77db66b1
    container_name: kafka-ui
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - zookeeper-1
      - zookeeper-2
      - kafka-schema-registry
      - ksql-server
    ports:
      - "8080:8080"
    networks:
      - hands-on-network
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=PLAINTEXT://kafka-broker-1:19092,PLAINTEXT://kafka-broker-2:29092
      - KAFKA_CLUSTERS_0_SCHEMAREGISTRY=http://schema-registry:8081
      - KAFKA_CLUSTERS_0_KSQLDBSERVER=ksql-server:8088
      - KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME=kafka-connect-1
      - KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS=http://kafka-connect-1:8083
      - KAFKA_CLUSTERS_0_KAFKACONNECT_1_NAME=kafka-connect-2
      - KAFKA_CLUSTERS_0_KAFKACONNECT_1_ADDRESS=http://kafka-connect-2:8083

  avro-tools:
    image: sebge2/avro-tools:1.0.0
    hostname: avro-tools
    container_name: avro-tools
    networks:
      - hands-on-network
    volumes:
      - ../../volume/avro:/demo

networks:
  hands-on-network:
    name: kafka_handson_network